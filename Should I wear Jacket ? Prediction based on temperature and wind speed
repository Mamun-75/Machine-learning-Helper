import numpy as np
def sigmoid(z):
    return 1/(1 +np.exp(-z))


#input 2 features, 3 Examples
X = np.array([[10,12,5],
             [5,3,8]]) #here X describe two feature temperature and wind speed, we have to predict either we take jacket or not
#weights: 2 features , 1 output
w = np.array([[-2],
             [3]])

#bias 
b = 1
#calculate z = w^t*x + b
Z = np.dot(w.T, X) + b

#apply sigmoid function to get probabilities
A = sigmoid(Z)
print("z values :" , Z , "\n Predictions (Probabilities): ", A)
y_pred = (A>.5).astype(int)
print("\n Predicted classes: ", y_pred)
#result : 
# z values : [[ -4 -14  15]] 
# Predictions (Probabilities):  [[1.79862100e-02 8.31528028e-07 9.99999694e-01]]
# Predicted classes:  [[0 0 1]]
